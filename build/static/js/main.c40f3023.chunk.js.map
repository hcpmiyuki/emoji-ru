{"version":3,"sources":["style/pages/App.js","images/emoji-ru_logo_maho.PNG","style/components/block/Header.js","views/components/block/Header.js","style/components/block/Footer.js","views/components/block/Footer.js","style/components/block/Form.js","views/components/atoms/Button.js","views/components/atoms/Textarea.js","views/components/atoms/RadioButton.js","views/components/block/Form/FormRadioButtons.js","views/components/block/Form/Form.js","style/components/block/OutputArea.js","style/components/module/ShareButton.js","views/components/module/ShareButton/TweetButton.js","views/components/module/ShareButton/ClipButton.js","views/components/module/ShareButton/ShareButton.js","views/components/block/OutputArea.js","images/loading.gif","views/components/atoms/Loading.js","api/emojizeApi.js","views/pages/App.js","reportWebVitals.js","style/GlobalStyle.js","index.js"],"names":["appStyle","css","headerStyle","backgroundImage","Header","footerStyle","Footer","href","target","rel","className","formStyle","Button","props","button","bgColor","color","fontSize","onClick","buttonLabel","Textarea","textarea","width","name","maxLength","rows","placeholder","RadioButton","type","value","checked","onChange","e","text","FormRadioButtons","radioButtons","map","index","toString","emojiLevel","Form","onSubmit","errorMsg","outputStyle","shareButtonStyle","TweetButton","emoji_ruUrl","encodeURIComponent","process","twitterUrl","tweetEmojized","window","open","ClipButton","onCopy","alert","ShareButton","OutputArea","Loading","loading","src","loadingGif","alt","tweet","a","requestUrl","fetch","response","json","data","result","App","tweetEmojizedDefault","useState","setTweetEmojized","setEmojiLevel","setErrorMsg","setLoading","handleSubmit","event","preventDefault","elements","fetchTweetEmojized","then","catch","error","console","log","finally","emojiLevelSelected","onChangeRadioButton","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","styles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAGaA,EAAWC,YAAH,yWCHN,MAA0B,+CCI5BC,EAAcD,YAAH,sOACEE,G,OCMXC,I,EAAAA,EARf,WAEE,OACE,sBAAQH,IAAKC,KCHJG,EAAcJ,YAAH,2TCWTK,I,IAAAA,EAXf,WACE,OACE,mBAAKL,IAAKI,EAAV,SACE,4BACE,wCAAU,iBAAGE,KAAK,yBAAR,2BACV,2BAAI,iBAAGA,KAAK,gCAAgCC,OAAO,SAASC,IAAI,aAA5D,UAAyE,iBAAGC,UAAU,mBAAtF,uBCLCC,EAAYV,YAAH,4PC0BPW,I,EAAAA,EAzBf,SAAgBC,GACd,IAAMC,EAASb,YAAH,scACUY,EAAME,QACjBF,EAAMG,MACKH,EAAME,QAObF,EAAMI,SAEUJ,EAAME,SAKrC,OACE,sBAAQd,IAAKa,EAAQI,QAAS,kBAAML,EAAMK,WAA1C,SACGL,EAAMM,YAAcN,EAAMM,YAAc,wBCAhCC,MApBf,SAAkBP,GAChB,IAAMQ,EAAWpB,YAAH,+GACFY,EAAMS,OAMlB,OACE,wBACErB,IAAKoB,EACLE,KAAMV,EAAMU,KACZC,UAAWX,EAAMW,UACjBC,KAAMZ,EAAMY,KACZC,YAAab,EAAMa,e,OCHVC,I,EAAAA,EAff,SAAqBd,GACnB,OACE,kCACE,uBACEe,KAAK,QACLC,MAAOhB,EAAMgB,MACbN,KAAMV,EAAMU,KACZO,QAASjB,EAAMiB,QACfC,SAAU,SAACC,GAAD,OAAOnB,EAAMkB,SAASC,MAEjCnB,EAAMoB,SCwBEC,MA9Bf,SAA0BrB,GAExB,IAAMsB,EAAelC,YAAH,mGASlB,OACE,kBAAIA,IAAKkC,EAAT,SAHc,CAAC,2BAAQ,iCAAS,wCAKpBC,KAAI,SAACP,EAAOQ,GAAR,OACV,2BACE,YAAC,EAAD,CACER,OAAQQ,EAAM,GAAGC,WACjBf,KAAMV,EAAMU,KACZQ,SAAU,SAACC,GAAD,OAAOnB,EAAMkB,SAASC,IAChCC,KAAMJ,EACNC,QAASjB,EAAM0B,cAAgBF,EAAM,GAAGC,cANnCD,SCoBJG,I,IAAAA,EAhCf,SAAc3B,GACZ,OACE,oBACE4B,SAAU,SAACT,GAAD,OAAOnB,EAAM4B,SAAST,IAChC/B,IAAKU,EAFP,UAIE,YAAC,EAAD,CACEW,MAAM,OACNC,KAAK,QACLC,UAAU,MACVC,KAAK,IACLC,YAAY,0HAEd,YAAC,EAAD,CACEH,KAAK,aACLQ,SAAU,SAACC,GAAD,OAAOnB,EAAMkB,SAASC,IAChCO,WAAY1B,EAAM0B,aAEpB,mBAAK7B,UAAU,eAAf,SACE,YAAC,EAAD,CACES,YAAY,mDACZJ,QAAQ,UACRC,MAAM,QACNC,SAAS,OACTC,QAAS,iBAGb,iBAAGR,UAAU,WAAb,SAAyBG,EAAM6B,eC/BxBC,EAAc1C,YAAH,+NCAX2C,EAAmB3C,YAAH,+JCqBd4C,MAtBf,SAAqBhC,GACnB,IAAMiC,EAAcC,mBAAmBC,gCAIjCC,EAAa,yCAHGF,mBAAmBlC,EAAMqC,cAAgBrC,EAAMqC,cAAgB,8IAGlE,gDAA+FJ,EAMlH,OACE,cAAC,EAAD,CACE5B,QAAS,WALXiC,OAAOC,KAAKH,EAAY,WAMtB9B,YAAY,uCACZJ,QAAQ,UACRC,MAAM,QACNC,SAAS,U,iBCCAoC,MAjBf,SAAoBxC,GAClB,OACE,cAAC,IAAD,CACEoB,KAAMpB,EAAMqC,cACZI,OAAQ,kBAAMC,MAAM,qDAFtB,SAIA,cAAC,EAAD,CACErC,QAAS,aACTC,YAAY,iCACZJ,QAAQ,UACRC,MAAM,QACNC,SAAS,YCQAuC,MAjBf,SAAqB3C,GACnB,OACE,kBAAIZ,IAAK2C,EAAT,UACE,2BACE,YAAC,EAAD,CACEM,cAAerC,EAAMqC,kBAGzB,2BACE,YAAC,EAAD,CACEA,cAAerC,EAAMqC,sBCKhBO,I,EAAAA,EAhBf,SAAoB5C,GAClB,OACE,mBAAKZ,IAAK0C,EAAV,UACE,mBAAKjC,UAAU,WAAf,SACE,0BAAIG,EAAMqC,kBAEZ,iBAAGxC,UAAU,MAAb,wJAGA,YAAC,EAAD,CACEwC,cAAerC,EAAMqC,oBCdd,MAA0B,oCCyC1BQ,MApCf,WACE,IAAMC,EAAU1D,YAAH,keA2Bb,OACE,mBAAKA,IAAK0D,EAAV,UACE,mBAAKC,IAAKC,EAAYC,IAAI,YAC1B,0C,qECpCC,WAAkCC,GAAlC,iCAAAC,EAAA,6DAAyCzB,EAAzC,+BAAsD,EACrD0B,EADD,UACiBjB,+CADjB,yBACkEe,EADlE,wBACuFxB,GADvF,SAEkB2B,MAAMD,GAFxB,cAECE,EAFD,gBAGcA,EAASC,OAHvB,cAGCC,EAHD,yBAKEA,EAAKC,QALP,4C,sBCgFQC,MAnEf,WACE,IAAMC,EAAuB,qKADhB,EAE6BC,mBAASD,GAFtC,mBAENtB,EAFM,KAESwB,EAFT,OAGuBD,mBAAS,KAHhC,mBAGNlC,EAHM,KAGMoC,EAHN,OAImBF,mBAAS,IAJ5B,mBAIN/B,EAJM,KAIIkC,EAJJ,OAKiBH,oBAAS,GAL1B,mBAKNd,EALM,KAKGkB,EALH,KAOb,SAASC,EAAaC,GACpBA,EAAMC,iBACNH,GAAW,GACX,IAAMd,EAAQgB,EAAMvE,OAAOyE,SAASlB,MAAMlC,MACpCU,EAAawC,EAAMvE,OAAOyE,SAAS1C,WAAWV,MAEpD,IAAKkC,EAGH,OAFAa,EAAY,yGACZF,EAAiBF,ID5BhB,SAAP,mCCgCIU,CAAmBnB,EAAOxB,GACvB4C,MAAK,SAACjC,GACL0B,EAAY,IACZF,EAAiBxB,MAElBkC,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZT,EAAY,mNACZF,EAAiBF,MAElBgB,SAAQ,WACPX,GAAW,MAUjB,OACE,mBAAK5E,IAAKD,EAAV,UAEI2D,GACA,mBAAKjD,UAAU,WAAf,SACE,YAAC,EAAD,MAIJ,YAAC,EAAD,IACA,mBAAKA,UAAU,OAAf,UACE,YAAC,EAAD,CACE+B,SAAU,SAACT,GAAD,OAAO8C,EAAa9C,IAC9BD,SAAU,SAACC,GAAD,OAlBlB,SAA6B+C,GAC3B,IAAMU,EAAqBV,EAAMvE,OAAOqB,MACxC8C,EAAcc,GAgBSC,CAAoB1D,IACrCO,WAAYA,EACZG,SAAUA,IAEXQ,GACD,YAAC,EAAD,CACEA,cAAeA,OAGnB,YAAC,EAAD,QC/DSyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCWCO,MARf,WACE,OACE,4BACE,YAAC,IAAD,CAAQC,OAVG,sDCIjBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.c40f3023.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nexport const appStyle = css`\n  position: relative;\n  width: 90%;\n  margin: 0 auto;\n  padding: 0 5%;\n  background-color: #e0ffff;\n\n  .grid {\n    display: grid;\n    grid-gap: 3rem;\n  }\n\n  .loadView{\n    position: fixed;\n    top: 50vh;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  @media (min-width: 768px) {\n    width: 50%;\n  }\n`","export default __webpack_public_path__ + \"static/media/emoji-ru_logo_maho.cc661efe.PNG\";","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\nimport backgroundImage from '../../../images/emoji-ru_logo_maho.PNG'\n\nexport const headerStyle = css`\n  background-image: url(${backgroundImage});\n  background-repeat: no-repeat;\n  background-size: contain;\n  background-position: center;\n  height: 220px;\n  \n  @media (min-width: 768px) {\n    height: 300px;\n  }\n`","/** @jsxImportSource @emotion/react */\nimport { headerStyle } from '../../../style/components/block/Header'\n\nfunction Header() {\n  \n  return (\n    <header css={headerStyle}>\n    </header>\n  );\n}\n\nexport default Header;","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nexport const footerStyle = css`\n  text-align: center;\n  padding-top: 90px;\n  padding-bottom: 10px;\n  ul {\n    li {\n      display: inline-block;\n      padding: 10px;\n      color: gray;\n      a {\n        text-decoration: none;\n        &:visited,&:link {\n          color: gray;\n        }\n      }\n    }\n  }\n`","/** @jsxImportSource @emotion/react */\nimport { footerStyle } from '../../../style/components/block/Footer'\n\nfunction Footer() {\n  return (\n    <div css={footerStyle}>\n      <ul>\n        <li>©2021 <a href='https://www.hcp834.com'>hcp834.com</a></li>\n        <li><a href='https://twitter.com/i_was_hcp' target='_blank' rel='noreferrer'><i className=\"fab fa-twitter\"></i>i_was_hcp</a></li>\n      </ul> \n    </div>\n  );\n}\n\nexport default Footer;","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nexport const formStyle = css`\n  display: grid;\n  grid-template-rows: 150px 40px 60px 25px;\n  align-items: center;\n\n  .submitButton {\n    text-align: center;\n  }\n\n  .errorMsg {\n    text-align: center;\n    font-size: 12px;\n    color: red;\n  }\n`","/** @jsxImportSource @emotion/react */\nimport React from 'react'\nimport { css } from '@emotion/react'\n\nfunction Button(props) {\n  const button = css`\n    background-color: ${props.bgColor};\n    color: ${props.color};\n    border: 1px solid ${props.bgColor};\n    padding: 8px 16px;\n    border-radius: 4px;\n    box-shadow: inset 0 2px 0 rgba(255,255,255,0.2), 0 2px 2px rgba(0, 0, 0, 0.19);\n    cursor: pointer;\n    font-family: Kosugi Maru, sans-serif;\n    font-weight: bold;\n    font-size: ${props.fontSize};\n    &:active {\n      border-bottom: solid 2px ${props.bgColor};\n      box-shadow: 0 0 2px rgba(0, 0, 0, 0.30);\n    }\n  `\n\n  return (\n    <button css={button} onClick={() => props.onClick()}>\n      {props.buttonLabel ? props.buttonLabel : 'ボタン'}\n    </button>\n  );\n}\n\nexport default Button;","/** @jsxImportSource @emotion/react */\nimport React from 'react'\nimport { css } from '@emotion/react'\n\nfunction Textarea(props) {\n  const textarea = css`\n    width: ${ props.width };\n    borderRadius: 4px;\n    resize: none;\n    font-size: 16px;\n  `\n\n  return (\n    <textarea\n      css={textarea}\n      name={props.name}\n      maxLength={props.maxLength}\n      rows={props.rows}\n      placeholder={props.placeholder}\n    >\n    </textarea>\n  );\n}\n\nexport default Textarea;","function RadioButton(props) {\n  return (\n    <label>\n      <input\n        type=\"radio\"\n        value={props.value}\n        name={props.name}\n        checked={props.checked}\n        onChange={(e) => props.onChange(e)}\n      />\n      {props.text}\n    </label>\n  );\n}\n\nexport default RadioButton;","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\nimport RadioButton from '../../atoms/RadioButton'\n\nfunction FormRadioButtons(props) {\n\n  const radioButtons = css`\n    li {\n      display: inline;\n      padding-right: 20px;\n    }\n  `;\n\n  const options = ['普通🙂', 'にぎやか✨', '盛り盛り🤩']\n\n  return (\n    <ul css={radioButtons}>\n      {\n        options.map((value, index) => (\n          <li key={index}>\n            <RadioButton \n              value={(index+1).toString()}\n              name={props.name}\n              onChange={(e) => props.onChange(e)}\n              text={value}\n              checked={props.emojiLevel === (index+1).toString()}\n            />\n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n\nexport default FormRadioButtons;","/** @jsxImportSource @emotion/react */\nimport { formStyle } from '../../../../style/components/block/Form'\n\nimport SubmitButton from '../../atoms/Button'\nimport Textarea from '../../atoms/Textarea'\nimport FormRadioButtons from './FormRadioButtons'\n\nfunction Form(props) {\n  return (\n    <form\n      onSubmit={(e) => props.onSubmit(e)}\n      css={formStyle}\n    >\n      <Textarea\n        width='100%'\n        name='tweet'\n        maxLength='180'\n        rows='6'\n        placeholder='180字以内でテキストを入力してください✏️'\n      />\n      <FormRadioButtons\n        name='emojiLevel'\n        onChange={(e) => props.onChange(e)}\n        emojiLevel={props.emojiLevel}\n      />\n      <div className='submitButton'>\n        <SubmitButton\n          buttonLabel='えもじる💫🧙'\n          bgColor='#FF8B82'\n          color='white'\n          fontSize='24px'\n          onClick={() => { }}\n        />\n      </div>\n      <p className='errorMsg'>{props.errorMsg}</p>\n    </form>\n  );\n}\n\nexport default Form;","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nexport const outputStyle = css`\n  .textArea {\n    border: solid 3px #FF8B82;\n    border-radius: 4px;\n    background-color: white;\n    padding: 20px 5px;\n  }\n\n  .msg {\n    text-align: center;\n    font-size: 12px;\n  }\n`","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react'\n\nexport const shareButtonStyle = css`\n  padding-top: 6px;\n  text-align: right;\n  li {\n    display: inline;\n  }\n  li:nth-of-type(1) {\n    padding-right: 5px;\n  }\n`","import Button from '../../atoms/Button.js'\n\nfunction TweetButton(props) {\n  const emoji_ruUrl = encodeURIComponent(process.env.REACT_APP_HOME_PATH);\n  const tweetEmojized = encodeURIComponent(props.tweetEmojized ? props.tweetEmojized : 'えもじ〜るでぶっきらぼうな文章を駆逐しよう🌟');\n  const hashtags = 'えもじ〜る';\n  // Twitter用のurl作成\n  const twitterUrl = 'https://twitter.com/intent/tweet?text=' + tweetEmojized + '&hashtags=' + hashtags + '&url=' + emoji_ruUrl;\n\n  function handleClick() {\n    window.open(twitterUrl, '_blank');\n  }\n\n  return (\n    <Button\n      onClick={() => handleClick()}\n      buttonLabel='ツイートする'\n      bgColor='#00acee'\n      color='white'\n      fontSize='10px'\n    />\n  );\n}\n\nexport default TweetButton;","import Button from '../../atoms/Button.js'\nimport CopyToClipBoard from 'react-copy-to-clipboard';\n\nfunction ClipButton(props) {\n  return (\n    <CopyToClipBoard\n      text={props.tweetEmojized}\n      onCopy={() => alert(`コピーしました！`)}\n    >\n    <Button\n      onClick={() => { }}\n      buttonLabel='コピーする'\n      bgColor='#76B947'\n      color='white'\n      fontSize='10px'\n      />\n    </CopyToClipBoard>\n  );\n}\n\nexport default ClipButton;","/** @jsxImportSource @emotion/react */\nimport { shareButtonStyle } from '../../../../style/components/module/ShareButton'\nimport TweetButton from './TweetButton';\nimport ClipButton from './ClipButton';\n\nfunction ShareButton(props) {\n  return (\n    <ul css={shareButtonStyle}>\n      <li>\n        <TweetButton\n          tweetEmojized={props.tweetEmojized}\n        />\n      </li>\n      <li>\n        <ClipButton\n          tweetEmojized={props.tweetEmojized}\n        />\n      </li>\n    </ul>\n  );\n}\n\nexport default ShareButton;","/** @jsxImportSource @emotion/react */\nimport { outputStyle } from '../../../style/components/block/OutputArea'\nimport ShareButton from '../module/ShareButton/ShareButton';\n\nfunction OutputArea(props) {\n  return (\n    <div css={outputStyle}>\n      <div className='textArea'>\n        <p>{props.tweetEmojized}</p>      \n      </div>\n      <p className='msg'>\n        結果が微妙な場合は何度か試してみてください🙏\n      </p>\n      <ShareButton\n        tweetEmojized={props.tweetEmojized}\n      />\n    </div>\n  );\n}\n\nexport default OutputArea;","export default __webpack_public_path__ + \"static/media/loading.d85d367a.gif\";","/** @jsxImportSource @emotion/react */\nimport React from 'react'\nimport { css } from '@emotion/react'\nimport loadingGif from '../../../images/loading.gif'\n\nfunction Loading() {\n  const loading = css`\n    position: relative;\n    width: 150px;\n    background-color: rgba(255, 255, 255, 0.9);\n    height: 150px;\n    border-radius: 10px;\n\n    img,a{\n      position: absolute;\n      left: 50%;\n      transform: translate(-50%, -50%);\n    }\n\n    img {\n      top: 40%;\n      width: 70%;\n    }\n\n    a {\n      top: 55%;\n      font-family: Kosugi Maru, sans-serif;\n      font-size: 15px;\n      font-weight: bold;\n      color: gray;\n    }\n  `\n\n  return (\n    <div css={loading}>\n      <img src={loadingGif} alt=\"loading\" />\n      <a>Loading</a>\n    </div>\n  );\n}\n\nexport default Loading;","export async function fetchTweetEmojized(tweet, emojiLevel = 3) {\n  const requestUrl = `${process.env.REACT_APP_API_ORIGIN}emojize?tweet=${tweet}&emoji_level=${emojiLevel}`;\n  const response = await fetch(requestUrl);\n  const data = await response.json();\n  \n  return data.result;\n}\n","/** @jsxImportSource @emotion/react */\nimport { appStyle } from '../../style/pages/App';\n\nimport Header from '../components/block/Header';\nimport Footer from '../components/block/Footer';\nimport Form from '../components/block/Form/Form';\nimport OutputArea from '../components/block/OutputArea';\nimport Loading from '../components/atoms/Loading';\n\nimport { fetchTweetEmojized } from '../../api/emojizeApi'\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const tweetEmojizedDefault = 'あじけない文章😹は絵文字😝で駆逐してやるっっ‼💦';\n  const [tweetEmojized, setTweetEmojized] = useState(tweetEmojizedDefault);\n  const [emojiLevel, setEmojiLevel] = useState('3');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    setLoading(true)\n    const tweet = event.target.elements.tweet.value;\n    const emojiLevel = event.target.elements.emojiLevel.value;\n\n    if (!tweet) {\n      setErrorMsg('テキストが入力されていません😢');\n      setTweetEmojized(tweetEmojizedDefault);\n      return;\n    }\n\n    fetchTweetEmojized(tweet, emojiLevel)\n      .then((tweetEmojized) => {\n        setErrorMsg('');\n        setTweetEmojized(tweetEmojized);\n      })\n      .catch((error) => {\n        console.log(error);\n        setErrorMsg('失敗してしまいました...テキストの内容を変えてもう一度お試しください😢');\n        setTweetEmojized(tweetEmojizedDefault);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n\n  // ラジオボタンのvalueの管理\n  function onChangeRadioButton(event) {\n    const emojiLevelSelected = event.target.value;\n    setEmojiLevel(emojiLevelSelected);\n  }\n  \n  return (\n    <div css={appStyle}>\n      {\n        loading &&\n        <div className='loadView'>\n          <Loading />\n        </div>\n      }\n      \n      <Header />\n      <div className='grid'>\n        <Form\n          onSubmit={(e) => handleSubmit(e)}\n          onChange={(e) => onChangeRadioButton(e)}\n          emojiLevel={emojiLevel}\n          errorMsg={errorMsg}\n        />\n        {tweetEmojized &&\n        <OutputArea\n          tweetEmojized={tweetEmojized}\n        />}\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/** @jsxImportSource @emotion/react */\nimport { Global } from '@emotion/react'\n\nconst globalStyle = `\n  *{\n    padding: 0;\n    margin: 0;\n  }\n`\n\nfunction GlobalStyle () {\n  return (\n    <div>\n      <Global styles={globalStyle} />\n    </div>\n  )\n}\n\nexport default GlobalStyle","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/pages/App.js';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStyle from './style/GlobalStyle'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}